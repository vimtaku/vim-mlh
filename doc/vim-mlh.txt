vim-mlh.txt

Author: vimtaku <vimtaku@gmail.com>
Updated : 2014-08-18
Version : 0.0.8
License : MIT license {{{
	Permission is hereby granted, free of charge, to any person obtaining
	a copy of this software and associated documentation files (the
	"Software"), to deal in the Software without restriction, including
	without limitation the rights to use, copy, modify, merge, publish,
	distribute, sublicense, and/or sell copies of the Software, and to
	permit persons to whom the Software is furnished to do so, subject to
	the following conditions:
	The above copyright notice and this permission notice shall be
	included in all copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
	EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

==============================================================================
CONTENTS					*vim-mlh-contents*

INTRODUCTION					*vim-mlh-introduction*
 CONVERT_CHARACTERS					*vim-mlh-convert_characters*
REQUREMENT					*vim-mlh-requirement*
INTERFACE					*vim-mlh-interface*
 KEY MAPPINGS					*vim-mlh-key-mappings*
 MAPPING EXAMPLE				*vim-mlh-mapping-example*
SEE ALSO					*vim-mlh-seealso*
CHANGELOG					*vim-mlh-changelog*

==============================================================================
INTRODUCTION					*vim-mlh-introduction*

 vim-mlh is plugin that converting roman character to japanese character.
 This plugin is similar with emacs/mlh.el.
 You can convert character when type like [convert_characters]/<SPACE> .

CONVERT_CHARACTERS				*vim-mlh-convert_characters*
 q: no conversion
 f: convert to hiragana. hogef/<Space> convert to ほげ
 k: convert to katakana. hogek/<Space> convert to ホゲ
 h: convert to hankaku kana. hogeh/<Space> convert to ﾎｹﾞ
 z: convert to zenkaku ascii. Hogez/<Space> convert to Ｈｏｇｅ

==============================================================================
REQUREMENT					*vim-mlh-requirement*

 - Internet connection
  - This plugin requires internet connection
     because to use google transliterate API.
  - http://www.google.com/intl/ja/ime/cgiapi.html
 - webapi.vim
  - This plugin requires webapi.vim for request above one.
  - https://github.com/mattn/webapi-vim
 - (skk.vim & skk-large-jisyo) # not requirement
  - If you have skk.vim and skk-large-jisyo,
    vim-mlh search words from jisyo and add it into candidates.
    So, I recommend you prepare skk.vim and skk-large jisyo.
   - you should define some setting in your .vimrc before
     this script loaded.
   - For example,
    "{{{3
        let g:skk_control_j_key = ""
        let g:skk_large_jisyo = "$HOME/local/dict/SKK-JISYO.L"
    "}}}

  - skk.vim source url is https://github.com/tyru/skk.vim
  - skk-large-jisyo url is
      http://openlab.ring.gr.jp/skk/wiki/wiki.cgi?page=SKK%BC%AD%BD%F1#p7

==============================================================================
INTERFACE					*vim-mlh-interface*

------------------------------------------------------------------------------
COMMANDS					*vim-mlh-commands*

						*:ToggleVimMlhKeymap*

:ToggleVimMlhKeymap
	Switching to use transliterate when type /<Space> on insert mode.


------------------------------------------------------------------------------
KEY MAPPINGS					*vim-mlh-key-mappings*

<Plug>(vim_mlh-retransliterate)		*<Plug>(vim_mlh-retransliterate)*
		Do retransliterate in normal mode.
		If you have already start roman characters, it may be removed.

<Plug>(vim_mlh-i_retransliterate)	*<Plug>(vim_mlh-i_retransliterate)*
		Do retransliterate in insert mode.
		If you have already start roman characters, it may be removed.

<Plug>(vim_mlh-v_transliterate)		*<Plug>(vim_mlh-v_transliterate)*
		You can transliterate your selection range.
		Actually, this mapping has set as default like below.
		 vmap /<Space> <Plug>(vim_mlh-v_transliterate)

MAPPING EXAMPLE					*vim-mlh-mapping-example*
	imap <C-b> <Plug>(vim_mlh-i_retransliterate)<C-n>
	nmap <C-b> <Plug>(vim_mlh-retransliterate)<C-n>

==============================================================================
SEE ALSO					*vim-mlh-seealso*
 - http://www.google.com/intl/ja/ime/cgiapi.html
 - http://axion.ee.uec.ac.jp/japanese/tools/emacs/mlh.html
 - http://d.hatena.ne.jp/vimtaku/20111224/1324713931


==============================================================================
CHANGELOG					*vim-mlh-changelog*

2014-8-18 v0.0.9 add zenkaku ascii conversion

2014-2-6 v0.0.8 bug fix

2012-12-29 v0.0.7 add hankana conversion and refactoring

2012-5-01 v0.0.6 improve undo and Fix document.
 - improve undo
  vim mlh got useful undo functions.
  For example, when you type "どうせ奈良itukaha",
  and you notice mistake of kanji,
  you can use <Plug>(vim_mlh-i_retransliterate)<C-n>.
  Then, you can retransliterate it. Isn't it useful?
 - document updated
 - remove default map
  I think it is rarely used so remove from default maps.
  "inoremap <C-k> <C-R>=<SID>toggle_vim_mlh_map()<CR>

2012-4-30 v0.0.5 using skk.vim and skk-large-dictionary.
 This program has a problem that google api returns a little candidate.
 Actually, it was critical problem for ime. so I fix it.
 I continue to use google api for analysis context,
  and I use skk-large jisyo to search candidates. It sounds good.

2012-2-11 v0.0.4 critical bug fix. fix for in unite buffer.
 Start versioning.
 Sometimes, I cannot translate when I type /<Space>.
 I can't find out reason why, but I found method to avoid it,
  so change to use it.
 Additionaly, I created autogroup that ignore convert in unite buffer
 because it's very annoying when I use unite.vim.


2011-12-31 v0.0.3 many refactoring and change convert method.
 We have to type `/<Space>' for conversion.
 (before, we can only type `/' but it was changed.)
 The fix reason is for include slash string.
     (e.g. '/usr/bin/perlq/habennridesu.'
 But I think typing `/<Space>' is not annoying for us.

 Add for visual mode conversion.
 Visual mode conversion is convert method in visual mode.
 We can only use google transliterate convert on visual mode now
 (but I think it's enough.).

2011-12-24 v0.0.2 bug fix.
2011-11-23 v0.0.1 Initial commit.

==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
